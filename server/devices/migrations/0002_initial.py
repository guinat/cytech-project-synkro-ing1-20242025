# Generated by Django 5.1.7 on 2025-04-08 13:25

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("devices", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name="device",
            name="owner",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="devices",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="devicecommand",
            name="created_by",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="device_commands",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="devicecommand",
            name="device",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="commands",
                to="devices.device",
            ),
        ),
        migrations.AddField(
            model_name="devicedatapoint",
            name="device",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="data_points",
                to="devices.device",
            ),
        ),
        migrations.AddField(
            model_name="device",
            name="device_type",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="devices",
                to="devices.devicetype",
            ),
        ),
        migrations.AddField(
            model_name="home",
            name="members",
            field=models.ManyToManyField(
                blank=True, related_name="member_homes", to=settings.AUTH_USER_MODEL
            ),
        ),
        migrations.AddField(
            model_name="home",
            name="owner",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="owned_homes",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="device",
            name="home",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="devices",
                to="devices.home",
            ),
        ),
        migrations.AddField(
            model_name="homemembership",
            name="home",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="invitations",
                to="devices.home",
            ),
        ),
        migrations.AddField(
            model_name="room",
            name="home",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="rooms",
                to="devices.home",
            ),
        ),
        migrations.AddField(
            model_name="device",
            name="room",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="devices",
                to="devices.room",
            ),
        ),
        migrations.AddIndex(
            model_name="devicedatapoint",
            index=models.Index(
                fields=["device", "timestamp"], name="devices_dev_device__07fb82_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="room",
            unique_together={("name", "home")},
        ),
        migrations.AlterUniqueTogether(
            name="device",
            unique_together={("name", "owner")},
        ),
    ]
